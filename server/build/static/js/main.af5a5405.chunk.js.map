{"version":3,"sources":["socket.js","pages/Login.js","pages/Register.js","pages/Chat.js","App.js","index.js"],"names":["socket","io","Login","useState","email","setEmail","password","setPassword","navigate","useNavigate","useEffect","on","state","localStorage","setItem","console","log","alert","className","style","height","onSubmit","e","preventDefault","emit","width","label","id","required","type","value","onChange","target","autoComplete","to","Register","username","setUsername","surname","setSurname","status","Chat","sessionTokenLS","getItem","localMyEmail","myEmail","setMyEmail","contacts","setContacts","activeButton","setActiveButton","message","setMessage","prevMessages","setPrevMessages","intervalRef","useRef","setRef","useCallback","node","scrollIntoView","smooth","current","setInterval","clearInterval","c","msg","from","onClick","clear","contactItems","contact","push","flush","action","active","renderContactsList","messageList","i","lastMessage","length","ref","renderConversation","noWrap","textarea","rows","App","path","element","exact","Error","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.af5a5405.chunk.js","sourcesContent":["import { io } from \"socket.io-client\";\r\nexport const socket = io(\"http://3.69.171.38:5000\");\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { MDBBtn, MDBInput } from \"mdb-react-ui-kit\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { socket } from \"../socket\";\r\n\r\nexport default function Login() {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        socket.on(\"login\", (state) => {\r\n            localStorage.setItem(\"sessionToken\", state);\r\n            localStorage.setItem(\"myEmail\", email);\r\n            if (state !== \"\") {\r\n                navigate(\"/Chat\");\r\n                console.log(\"Email, password correct\");\r\n            } else {\r\n                alert(\"Email, password incorrect\");\r\n                navigate(\"/\");\r\n            }\r\n        });\r\n    }, [navigate, email]);\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        socket.emit(\"login\", email, password);\r\n    }\r\n\r\n    const handleEmailChange = (e) => {\r\n        setEmail(e.target.value);\r\n    };\r\n\r\n    const handlePasswordChange = (e) => {\r\n        setPassword(e.target.value);\r\n    };\r\n\r\n    return (\r\n        <div className=\"d-flex align-items-center\" style={{ height: \"100vh\" }}>\r\n            <form\r\n                onSubmit={handleSubmit}\r\n                className=\"container-sm\"\r\n                style={{ width: \"30vw\" }}\r\n            >\r\n                <div className=\"form-outline mb-4\">\r\n                    <MDBInput\r\n                        label=\"Email\"\r\n                        id=\"typeEmail\"\r\n                        required\r\n                        type=\"email\"\r\n                        value={email}\r\n                        onChange={handleEmailChange}\r\n                        autoComplete=\"username\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-outline mb-4\">\r\n                    <MDBInput\r\n                        label=\"Password\"\r\n                        id=\"typePassword\"\r\n                        required\r\n                        type=\"password\"\r\n                        value={password}\r\n                        onChange={handlePasswordChange}\r\n                        autoComplete=\"current-password\"\r\n                    />\r\n                </div>\r\n\r\n                <MDBBtn>Sign in</MDBBtn>\r\n                <div className=\"text-center mt-2\">\r\n                    <p>\r\n                        Create new account? <Link to=\"/Register\">Register</Link>\r\n                    </p>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { MDBBtn, MDBInput } from \"mdb-react-ui-kit\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { socket } from \"../socket\";\r\n\r\nexport default function Register() {\r\n    const [username, setUsername] = useState(\"\");\r\n    const [surname, setSurname] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        socket.on(\"createNewUser\", (status) => {\r\n            if (status) {\r\n                console.log(\"Account registered\");\r\n                navigate(\"/\");\r\n            } else {\r\n                alert(\"Email is already in use\");\r\n                navigate(\"/Register\");\r\n            }\r\n        });\r\n    }, [navigate]);\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        socket.emit(\"createNewUser\", username, surname, email, password);\r\n        console.log(\"Submit\");\r\n    }\r\n    const handleNameChange = (e) => {\r\n        setUsername(e.target.value);\r\n    };\r\n\r\n    const handleSurnameChange = (e) => {\r\n        setSurname(e.target.value);\r\n    };\r\n\r\n    const handleEmailChange = (e) => {\r\n        setEmail(e.target.value);\r\n    };\r\n\r\n    const handlePasswordChange = (e) => {\r\n        setPassword(e.target.value);\r\n    };\r\n\r\n    return (\r\n        <div className=\"d-flex align-items-center mt-3 ms-2\" style={{ width: \"100%\", height: \"100%\" }}>\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"row mb-4\">\r\n                    <div className=\"col form-outline\">\r\n                        <MDBInput\r\n                            type=\"text\"\r\n                            label=\"First name\"\r\n                            id=\"firstName\"\r\n                            value={username}\r\n                            required\r\n                            onChange={handleNameChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"col form-outline\">\r\n                        <MDBInput\r\n                            label=\"Last name\"\r\n                            type=\"text\"\r\n                            id=\"lastName\"\r\n                            value={surname}\r\n                            required\r\n                            onChange={handleSurnameChange}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"form-outline mb-4\">\r\n                    <MDBInput\r\n                        label=\"Email address\"\r\n                        type=\"email\"\r\n                        id=\"emailAddress\"\r\n                        value={email}\r\n                        required\r\n                        onChange={handleEmailChange}\r\n                        autoComplete=\"username\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-outline mb-4\">\r\n                    <MDBInput\r\n                        label=\"Password\"\r\n                        type=\"password\"\r\n                        id=\"typePassword\"\r\n                        value={password}\r\n                        required\r\n                        onChange={handlePasswordChange}\r\n                        autoComplete=\"current-password\"\r\n                    />\r\n                </div>\r\n\r\n                <MDBBtn>Sign up</MDBBtn>\r\n\r\n                <Link className=\"ms-1\" to=\"/\">\r\n                    <MDBBtn>Back</MDBBtn>\r\n                </Link>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n","import {\r\n    MDBBtn,\r\n    MDBCol,\r\n    MDBInput,\r\n    MDBInputGroup,\r\n    MDBListGroup,\r\n    MDBListGroupItem,\r\n    MDBRow,\r\n} from \"mdb-react-ui-kit\";\r\nimport React, { useCallback, useEffect, useRef, useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { socket } from \"../socket\";\r\n\r\nexport default function Chat() {\r\n    const sessionTokenLS = localStorage.getItem(\"sessionToken\");\r\n    const localMyEmail = localStorage.getItem(\"myEmail\");\r\n    const navigate = useNavigate();\r\n    const [myEmail, setMyEmail] = useState(\"\");\r\n    const [contacts, setContacts] = useState([]);\r\n    const [activeButton, setActiveButton] = useState(\"\");\r\n    const [message, setMessage] = useState(\"\");\r\n    const [prevMessages, setPrevMessages] = useState([]);\r\n    const intervalRef = useRef(0);\r\n\r\n    const setRef = useCallback((node) => {\r\n        if (node) {\r\n            node.scrollIntoView({ smooth: true });\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (myEmail) {\r\n            intervalRef.current = setInterval(() => {\r\n                socket.emit(\"setActive\", myEmail);\r\n            }, 3000);\r\n        }\r\n        return () => {\r\n            clearInterval(intervalRef.current);\r\n        };\r\n    }, [myEmail]);\r\n\r\n    useEffect(() => {\r\n        if ((sessionTokenLS === null) | (localMyEmail === null)) {\r\n            alert(\"No session token or email\");\r\n            navigate(\"/\");\r\n        }\r\n        if (localMyEmail !== null) {\r\n            setMyEmail(localMyEmail);\r\n        }\r\n\r\n        socket.emit(\"getContacts\", localMyEmail);\r\n        socket.on(\"getContacts\", (c) => {\r\n            setContacts(c);\r\n        });\r\n\r\n        socket.on(\"getMessages\", (c) => {\r\n            setPrevMessages(c);\r\n        });\r\n\r\n        socket.on(\"chatMessage\", (msg) => {\r\n            if (msg.from !== activeButton) {\r\n                setPrevMessages([\r\n                    ...prevMessages,\r\n                    {\r\n                        message: msg,\r\n                        from: activeButton,\r\n                        to: myEmail,\r\n                    },\r\n                ]);\r\n            }\r\n        });\r\n    }, [\r\n        localMyEmail,\r\n        sessionTokenLS,\r\n        navigate,\r\n        prevMessages,\r\n        activeButton,\r\n        myEmail,\r\n    ]);\r\n\r\n    function logout() {\r\n        localStorage.clear();\r\n    }\r\n\r\n    function handelSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        socket.emit(\"chatMessage\", message, myEmail, { to: activeButton });\r\n        setMessage(\"\");\r\n        setPrevMessages([\r\n            ...prevMessages,\r\n            {\r\n                message,\r\n                from: myEmail,\r\n                to: activeButton,\r\n            },\r\n        ]);\r\n    }\r\n\r\n    const handleMessage = (e) => {\r\n        setMessage(e.target.value);\r\n    };\r\n\r\n    const renderContactsList = () => {\r\n        let contactItems = [];\r\n        for (let contact of contacts) {\r\n            contactItems.push(\r\n                <MDBListGroup flush key={contact.email}>\r\n                    <MDBListGroupItem\r\n                        key={contact.email}\r\n                        action\r\n                        active={activeButton === contact.email}\r\n                        onClick={() => {\r\n                            setActiveButton(contact.email);\r\n                            socket.emit(\"getMessages\", myEmail, contact.email);\r\n                        }}\r\n                    >\r\n                        {contact.username} {contact.surname}\r\n                    </MDBListGroupItem>\r\n                </MDBListGroup>\r\n            );\r\n        }\r\n        return contactItems;\r\n    };\r\n\r\n    const renderConversation = () => {\r\n        let messageList = [];\r\n        let i = 0;\r\n        const lastMessage = messageList.length === i;\r\n        for (let msg of prevMessages) {\r\n            messageList.push(\r\n                <MDBListGroup flush key={i} style={{}}>\r\n                    <MDBListGroupItem\r\n                        className={`${\r\n                            msg.from === myEmail\r\n                                ? \"align-self-end align-items-end\"\r\n                                : \"align-items-start align-self-start\"\r\n                        }`}\r\n                        id=\"messages\"\r\n                        ref={lastMessage ? setRef : null}\r\n                    >\r\n                        <MDBListGroup\r\n                            className={`rounded px-2 py-1 ${\r\n                                msg.from === myEmail\r\n                                    ? \"bg-primary text-white\"\r\n                                    : \"border\"\r\n                            }`}\r\n                        >\r\n                            {msg.message}\r\n                        </MDBListGroup>\r\n                    </MDBListGroupItem>\r\n                </MDBListGroup>\r\n            );\r\n            i++;\r\n        }\r\n        return messageList;\r\n    };\r\n\r\n    return (\r\n        <div style={{ width: \"100%\", height: \"100%\" }}>\r\n            <div className=\"d-flex flex-row justify-content-end border\">\r\n                <Link className=\"d-flex mt-1 mb-1 mx-1\" to=\"/\">\r\n                    <MDBBtn onClick={logout}>Logout</MDBBtn>\r\n                </Link>\r\n            </div>\r\n            <form onSubmit={handelSubmit}>\r\n                <div className=\"d-flex align-items-start\">\r\n                    <div>\r\n                        <MDBCol\r\n                            className=\"d-flex-column border overflow-auto\"\r\n                            style={{ width: \"20vw\", height: \"92.5vh\" }}\r\n                        >\r\n                            <div>{renderContactsList()}</div>\r\n                        </MDBCol>\r\n                    </div>\r\n                    <MDBCol>\r\n                        <MDBRow\r\n                            className=\"mx-1 overflow-auto\"\r\n                            style={{ height: \"82.5vh\" }}\r\n                        >\r\n                            <div>{renderConversation()}</div>\r\n                        </MDBRow>\r\n                        <div>\r\n                            <MDBRow\r\n                                className=\"d-flex overflow-auto\"\r\n                                style={{ height: \"10vh\", width: \"100%\" }}\r\n                            >\r\n                                <MDBInputGroup noWrap>\r\n                                    <MDBInput\r\n                                        label=\"Message\"\r\n                                        id=\"textArea\"\r\n                                        value={message}\r\n                                        required\r\n                                        textarea\r\n                                        rows={2}\r\n                                        style={{ width: \"73vw\" }}\r\n                                        onChange={handleMessage}\r\n                                    />\r\n                                    <MDBBtn>Send</MDBBtn>\r\n                                </MDBInputGroup>\r\n                            </MDBRow>\r\n                        </div>\r\n                    </MDBCol>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n","import { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport Login from \"./pages/Login\";\nimport Register from \"./pages/Register\";\nimport Chat from \"./pages/Chat\";\n\nfunction App() {\n    return (\n        <Router className=\"App\">\n            <Routes>\n                <Route path=\"/\" element={<Login />} exact />\n                <Route path=\"/Register\" element={<Register />} />\n                <Route path=\"/Chat\" element={<Chat />} />\n                <Route element={Error} />\n            </Routes>\n        </Router>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport 'mdb-react-ui-kit/dist/css/mdb.min.css'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}